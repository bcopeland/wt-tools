#!/bin/bash
# update wireless-testing tree
#
# aborts with non-zero status if manual intervention is required.

function merge_tree()
{
	local tree=$1
	git merge --no-ff --no-edit --rerere-autoupdate $tree/master
	ret=$?
	if [[ ! $ret -eq 0 ]]; then
		# check if rerere fixed it
		if [[ $(git rerere diff | wc -l) -eq 0 ]]; then
			git commit --no-edit && return
		fi

		# accept deletes if there's a delete/update conflict
		git status --porcelain --untracked-files=no | \
			awk '{if ($1 == "DU") { print $2 } }' | \
			xargs git rm
		git rm drivers/isdn/gigaset/i4l.c drivers/isdn/hisax/hfc_usb.c
		git commit --no-edit && return

		# out of luck
		echo "could not merge"
		exit 1
	fi
}

function log()
{
	local msg=$1
	now=$(date +%Y-%m-%dT%H:%M:%S)
	echo "$now $msg"
}

trees="wireless-drivers wireless-drivers-next mac80211 mac80211-next"

# fetch all the trees
for tree in linus net-next $trees; do
	git fetch $tree
done

# did anything change?
old_linus=$(cat .wtref.linus)

changed=0
latest=$(git tag -l 'v*' --sort='-v:refname' | head -1)

# git doesn't sort releases properly with respect to RCs; check for
# the actual release
ver=${latest/-rc*/}
git show-ref -s $ver > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	latest=$ver
fi

if [[ $latest != $old_linus ]]; then
	log "Linus is updated"
	changed=1
fi
for tree in $trees; do
	old=$(cat .wtref.${tree})
	if [[ $old != $(git show-ref -s $tree/master) ]]; then
		log "$tree is updated"
		changed=1
	fi
done

if [[ $changed -eq 0 ]]; then
	log "No changes upstream, nothing to do!"
	exit 0
fi

# Start with latest linus tag
git reset --hard $latest

# Merge net-next, to avoid net/net-next conflicts
merge_tree net-next || exit 1

# Merge wireless trees
for tree in $trees; do
	merge_tree $tree || exit 1
done

# Optional: cherry-pick some bugfix during a series
# git cherry-pick 261a422e739890ba96330f1b1cf67a1a1d68e9a5

# label the build
echo '-wt' > localversion-wireless-testing
git add localversion-wireless-testing
git commit -m 'Add localversion to identify builds from this tree' -s

# everything merged, compile test and push result
make -j 48 || exit 2

# all good, publish
echo $latest > .wtref.linus
for tree in $trees; do
	git show-ref -s $tree/master > .wtref.${tree}
done

tag=wt-`date +%Y-%m-%d`
git tag -a $tag -m "Wireless-testing build $tag"
./wt-push
